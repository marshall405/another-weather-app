{"version":3,"sources":["Time.js","styles/facebookStyles.js","Input.js","ShowTemp.js","App.js","serviceWorker.js","index.js"],"names":["styles","margin","padding","cursor","fontSize","display","flexStyle","justifyContent","alignItems","Time","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","hour","min","sec","midday","military","handleClick","bind","assertThisInitialized","getDate","inherits","createClass","key","value","_this2","updateTime","setInterval","Date","stringDate","getHours","getMinutes","getSeconds","concat","toLocaleDateString","setState","isMilitary","switchMilitaryTime","react_default","a","createElement","style","onClick","React","Component","colorStyles","inputStyle","width","textAlign","borderRadius","height","Input","zip","handleUserInput","handleSubmit","e","target","preventDefault","length","Number","isNaN","zipNum","setZipcode","onSubmit","type","maxLength","placeholder","onChange","divStyles","color","backgroundColor","minHeight","centerStyle","errorMessageStyle","marginTop","footerStyle","position","bottom","left","ShowTemp","Time_Time","Input_Input","error","errorMessage","city","temp","src","icon","alt","sky","sunrise","sunset","href","App","process","fetchWeather","fetch","then","res","json","console","log","coord","kelvinToFahrenheit","main","convertToTime","sys","name","weather","message","mil","toLocaleTimeString","k","Math","floor","className","ShowTemp_ShowTemp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81cea6cd.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst styles = {\n    margin: 0,\n    padding: 0,\n    cursor: 'pointer',\n    fontSize: 16,\n    display: 'inline'\n}\nconst flexStyle = {\n    display:'flex', \n    justifyContent:'space-between', \n    alignItems:'center' \n}\nexport class Time extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: '',\n            hour: '',\n            min: '',\n            sec: '',\n            midday: '',\n            military: this.props.military,\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.getDate = this.getDate.bind(this);\n    }\n    \n    componentDidMount() {\n        this.updateTime();\n        setInterval( () => this.updateTime(), 1000);\n    }\n    updateTime() {\n        const date = new Date();\n        let stringDate = '';\n        let hour = date.getHours();\n        let min = date.getMinutes();\n        let sec = date.getSeconds();\n        let midday = '';\n        if(!this.state.military && hour > 12){\n            const standardHour = hour - 12;\n            midday = hour < 12 ? 'AM' : 'PM';\n            hour = standardHour;\n        }\n        if(min < 10){\n            const minWith0 = `0${min}`;\n            min = minWith0;\n        }\n        if(sec < 10){\n            const secWith0 = `0${sec}`;\n            sec = secWith0;\n        }\n        if(this.props.date) {\n            stringDate = date.toLocaleDateString();\n        }\n        this.setState({\n            date: stringDate,\n            hour: hour,\n            min: min,\n            sec: sec,\n            midday: midday,\n        });\n    }\n    switchMilitaryTime() {\n        const isMilitary = this.state.military ? false : true;\n        this.setState({military: isMilitary});\n    }\n    getDate() {\n        const date = new Date();\n        return date.toLocaleDateString();\n      }\n    handleClick() {\n        this.switchMilitaryTime();\n        \n    }\n    \n    render() {\n        if(this.state.date){\n            return (\n                <div style={flexStyle}>\n                    <h6 style={styles}> {this.state.date} </h6>\n                    <h6 style={styles} onClick={this.handleClick}> {`${this.state.hour}:${this.state.min}:${this.state.sec} ${this.state.midday}`} </h6>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <h6 style={styles} onClick={this.handleClick}> {`${this.state.hour}:${this.state.min}:${this.state.sec} ${this.state.midday}`} </h6>\n            </div>\n        )\n    }   \n}\n","const blue = 'rgb(139, 157, 195)';\nconst darkBlue = 'rgb(059, 089, 152)';\nconst lightBlue = 'rgb(223, 227, 238)';\nconst grey = 'rgb(247, 247, 247)';\nconst white = 'rgb(255, 255, 255)';\nconst red = 'rgb(201, 4, 4)';\n\nexport const colorStyles = {\n  blue: blue,\n  darkBlue: darkBlue,\n  lightBlue: lightBlue,\n  grey: grey,\n  white: white,\n  red: red\n}","import React from 'react';\n\nconst inputStyle = {\n    margin: '0 auto',\n    width: '70%',\n    fontSize: 18,\n    textAlign: 'center',\n    borderRadius: 10,\n    height: 30\n}\n\nexport class Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zip: ''\n        }\n        this.handleUserInput = this.handleUserInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleUserInput(e) {\n        const zip = e.target.value;\n        this.setState({zip: zip})\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        if(this.state.zip.length === 5) {\n            if(!Number.isNaN(Number(this.state.zip))){\n                const zipNum = Number(this.state.zip);\n                this.props.setZipcode(zipNum);\n                this.setState({zip: ''});\n            } \n        }\n    }\n    render() {\n        return (\n            <form style={{textAlign:'center'}}onSubmit={this.handleSubmit}>\n                <input style={inputStyle} type='text' maxLength='5' placeholder='enter zipcode' onChange={this.handleUserInput} value={this.state.zip} />\n            </form>\n        )\n    }\n}","import React from 'react';\nimport { Time } from './Time';\nimport {colorStyles} from './styles/facebookStyles';\nimport { Input } from './Input';\nconst divStyles = {\n    color: colorStyles.darkBlue,\n    backgroundColor: colorStyles.grey,\n    padding: 10,\n    borderRadius: 10,\n    minHeight: 450\n}\nconst centerStyle = {\n    textAlign: 'center'\n}\nconst errorMessageStyle = {\n    marginTop: 150,\n    color: colorStyles.red,\n    \n}\nconst flexStyle = {\n    display:'flex', \n    justifyContent:'space-around', \n    alignItems:'center' \n}\nconst footerStyle = {\n    position: 'absolute', \n    bottom: 20,left:0, \n    width: '100%', \n    textAlign: 'center'\n}\nexport const ShowTemp = (props) => {\n    const displayInfo = () => {\n        if(!props.error){\n            return (\n                <div>\n                    <h2> {props.city} </h2>\n                    <h1 style={{margin: 5, fontSize: 54}}> {props.temp}&#8457; </h1>\n                    <img style={{margin: '10px 0 50px 0'}} src={`http://openweathermap.org/img/w/${props.icon}.png`} alt={`${props.sky} skies`} />\n                    <div style={flexStyle}>  \n                        <p> Sunrise {props.sunrise} </p>  \n                        <p> Sunset {props.sunset} </p>\n                    </div>\n                    <h5> {props.sky} </h5>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h2 style={errorMessageStyle}> {props.errorMessage} </h2>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div style={divStyles}>\n            <Time date={true} military={false}/> \n            <div style={{margin: 20}}>\n                <Input setZipcode={props.setZipcode}/>\n            </div>\n            <div style={centerStyle}>\n                {displayInfo()}\n            </div>\n            <footer style={footerStyle}> Weather App Made Possible By <a href='https://openweathermap.org/'>openweathermap</a></footer>\n        </div>\n    )\n  \n    \n}","import React, { Component } from 'react';\nimport { ShowTemp } from './ShowTemp';\n\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temp: 0,\n      city: '',\n      state: '',\n      zip: 78665,\n      error: false,\n      errorMessage: '',\n      sunrise: '',\n      sunset: '',\n      sky: '',\n      icon: ''\n    }\n    this.key = process.env.REACT_APP_WEATHER_API_KEY;\n\n    this.setZipcode = this.setZipcode.bind(this);\n    this.fetchWeather = this.fetchWeather.bind(this);\n  }\n  componentDidMount() {\n    this.fetchWeather(this.state.zip);\n  }\n  fetchWeather(zip) {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?zip=${zip}&appid=${this.key}`)\n    .then( res => res.json())\n    .then( res => {\n      console.log(res)\n      if(res.coord){\n        const temp = this.kelvinToFahrenheit(res.main.temp);\n        const sunrise = this.convertToTime(res.sys.sunrise);\n        const sunset = this.convertToTime(res.sys.sunset);\n        const city = res.name;\n        const sky = res.weather[0].main;\n        const icon = res.weather[0].icon;\n        this.setState({\n          city: city,\n          temp: temp,\n          error: false,\n          sunrise: sunrise,\n          sunset: sunset,\n          sky: sky,\n          icon: icon\n        })\n      } else {\n        this.setState({error: true, errorMessage: res.message})\n      } \n    });\n  }\n  setZipcode(zip) {\n    this.fetchWeather(zip);\n  }\n  convertToTime(mil) {\n    // for sunrise and sunset times\n    const date = new Date(mil * 1000);\n    return date.toLocaleTimeString();\n  }\n  kelvinToFahrenheit(k) {\n    const temp = Math.floor((k * (9/5)) - 459.67);\n    return temp;\n  }\n \n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <ShowTemp \n          temp={this.state.temp} \n          city={this.state.city} \n          error={this.state.error} \n          errorMessage={this.state.errorMessage} \n          sunrise={this.state.sunrise} \n          sunset={this.state.sunset} \n          sky={this.state.sky} \n          icon={this.state.icon}\n          setZipcode={this.setZipcode} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}